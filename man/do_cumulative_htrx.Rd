% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_cumulative_htrx.R
\name{do_cumulative_htrx}
\alias{do_cumulative_htrx}
\alias{do_cumulative_htrx_step1}
\alias{extend_haps}
\alias{make_cumulative_htrx}
\title{Cumulative HTRX}
\usage{
do_cumulative_htrx(
  data_nosnp,
  SNP1,
  SNP2,
  train_proportion = 0.5,
  sim_times = 10,
  featurecap = 40,
  usebinary = 1,
  randomorder = TRUE,
  fixorder = NULL,
  method = "simple",
  criteria = "BIC",
  gain = TRUE,
  runparallel = FALSE,
  mc.cores = 10,
  rareremove = FALSE,
  rare_threshold = 0.001,
  dataseed = 1:sim_times
)

do_cumulative_htrx_step1(
  data_nosnp,
  SNP1,
  SNP2,
  train_proportion = 0.5,
  featurecap = 40,
  usebinary = 1,
  randomorder = TRUE,
  fixorder = NULL,
  method = "simple",
  criteria = "BIC",
  seed = 123,
  gain = TRUE,
  runparallel = FALSE,
  mc.cores = 10,
  rareremove = FALSE,
  rare_threshold = 0.001
)

extend_haps(
  data_nosnp,
  featuredata,
  train,
  featurecap = dim(featuredata)[2],
  usebinary = 1,
  gain = TRUE,
  runparallel = FALSE,
  mc.cores = 10
)

make_cumulative_htrx(
  SNP1,
  SNP2,
  featurename,
  rareremove = FALSE,
  rare_threshold = 0.001
)
}
\arguments{
\item{data_nosnp}{a data frame with outcome and fixed covariates (for example, sex, age and the first 18 PCs)
and without SNPs or haplotypes.}

\item{SNP1}{a data frame of the SNPs' genotype of the first genome. The genotype of a SNP for each individual is either 0 (reference allele) or 1 (alternative allele).}

\item{SNP2}{a data frame of the SNPs' genotype of the second genome. The genotype of a SNP for each individual is either 0 (reference allele) or 1 (alternative allele).}

\item{train_proportion}{a positive number between 0 and 1 giving the proportion of the training dataset when splitting data into 2 folds.}

\item{sim_times}{an integer giving the number of simulations in step 1 (see details).}

\item{featurecap}{a positive integer which manually sets the maximum number of independent features. By default, featurecap=40.}

\item{usebinary}{a non-negative number representing different models.
Use linear model if usebinary=0,
use logistic regression model via fastglm if usebinary=1,
and use logistic regression model via glm if usebinary>1.}

\item{randomorder}{logical. If randomorder=TRUE (default),
use random order of all the SNPs to add SNPs in cumulative HTRX.}

\item{fixorder}{a vector of the rfixed order of SNPs to be added in cumulative HTRX.
This only works by setting randomorder=FALSE.
The length of "fixorder" can be smaller than the total number of SNPs,
i.e. users can specify the order of some instead of all of the SNPs.}

\item{method}{the method used for data splitting, either "simple" (default) or "stratified".}

\item{criteria}{the information criteria for model selection, either "BIC" (default) or "AIC".}

\item{gain}{logical. If gain=TRUE (default), report the variance explained in addition to fixed covariates;
otherwise, report the total variance explained by all the variables.}

\item{runparallel}{logical. Use parallel programming based on "mclapply" function or not.
Note that for Windows users, "mclapply" doesn't work, so please set runparallel=FALSE.}

\item{mc.cores}{an integer giving the number of cores used for parallel programming. By default, mc.cores=10.
This only works when runparallel=TRUE.}

\item{rareremove}{logical. Remove rare SNPs and haplotypes or not. By default, rareremove=FALSE.}

\item{rare_threshold}{a numeric number below which the haplotype or SNP is removed. This only works when rareremove=TRUE.}

\item{dataseed}{a vector of the seed that each simulation in step 1 (see methods) uses.
The length of dataseed must be the same as sim_times.}

\item{featuredata}{a data frame of the feature data, e.g. haplotype data created by HTRX or SNPs.
These features exclude all the data in data_nosnp, and will be selected using 2-step cross-validation.}

\item{train}{a vector of the indexes of the training data.}

\item{featurename}{a character giving the names of features (haplotypes).}
}
\value{
"do_cumulative_htrx" returns a list containing the best model selected,
 and the out-of-sample variance explained in each test set.

"do_cv_step1" returns a list of three candidate models selected by a single simulation.

"extend_haps" returns a character of the names of the selected features.

"make_cumulative_htrx" returns a data frame of the haplotype matrix.
}
\description{
Two step cross-validation used to select the best HTRX model for longer haplotypes,
i.e. include at least 7 SNPs.
}
\details{
Longer haplotypes are important for discovering interactions.
However, there are \ifelse{html}{\out{3<sup>k</sup>}}{\eqn{3^k}}-1 haplotypes in HTRX
if the region contains k SNPs,
making HTRX (do_cv" function) unrealistic to apply on for regions with large numbers of SNPs.
To address this issue, we proposed "cumulative HTRX" (function "do_cumulative_htrx")
that enables HTRX to run on longer haplotypes,
 i.e. haplotypes which include at least 7 SNPs (we recommend).
 There are 2 steps to implement cumulative HTRX.

Step 1: extend haplotypes and select candidate models.

(1) Randomly sample a subset (50%) of data,
use stratified sampling when the outcome is binary.
This subset is used for all the analysis in (2) and (3);

(2) Start with L randomly chosen SNPs from the entire k SNPs,
and keep the top M haplotypes that are chosen from the forward regression.
Then add another SNP to the M  haplotypes to create 3M+2 haplotypes.
There are 3M haplotypes obtained by adding "0", "1" or "X" to the previous M haplotypes,
as well as 2 bases of the added SNP, i.e. "XX...X0" and "XX...X1"
(as "X" was implicitly used in the previous step).
The top M haplotypes from them are then selected using forward regression.
Repeat this process until obtaining M haplotypes which include k-1 SNPs;

(3) Add the last SNP to create 3M+2 haplotypes.
Afterwards, start from a model with fixed covariates (e.g. 18 PCs, sex and age),
perform forward regression on the training set,
and select s models with the lowest BIC to enter the candidate model pool;

(4) repeat (1)-(3) B times, and select all the different models
in the candidate model pool as the candidate models.

Step 2: select the best model using 10-fold cross-validation.

(1) Randomly split the whole data into 10 groups with approximately equal sizes,
using stratified sampling when the outcome is binary;

(2) In each of the 10 folds, use a different group as the test dataset,
and take the remaining groups as the training dataset.
Then, fit all the candidate models on the training dataset,
and use these fitted models to compute the additional variance explained by features
(out-of-sample R2) in the test dataset.
Finally, select the candidate model with the biggest
average out-of-sample R2 as the best model.

Function "do_cumulative_htrx_step1" is the Step 1 (1)-(3) described above.
Function "extend_haps" is used to select haplotypes in the Step 1 (2) described above.
Function "make_cumulative_htrx" is used to generate the haplotype data
(by adding a new SNP into the haplotypes) from M haplotypes to 3M+2 haplotypes,
which is also described in the Step 1 (2)-(3).
}
\examples{
## use dataset "SNP1", "SNP2" and "data_nosnp"
## "SNP1" and "SNP2" are both genomes of 8 SNPs for 20,000 individuals
## "data_nosnp" is a simulated dataset which contains the outcome (binary), sex, age and 18 PCs

## we perform cumulative HTRX on all the 8 SNPs using 2-step cross-validation
do_cumulative_htrx(data_nosnp,SNP1,SNP2,train_proportion=0.5,
                   sim_times=2,featurecap=40,usebinary=1,randomorder=TRUE,
                   method="stratified",criteria="BIC",
                   runparallel=FALSE)
}
\references{
Efron, B. Bootstrap Methods: Another Look at the Jackknife. Ann. Stat. 7, 1-26 (1979).

Kass, R. E. & Wasserman, L. A Reference Bayesian Test for Nested Hypotheses and its Relationship to the Schwarz Criterion. J. Am. Stat. Assoc. 90, 928-934 (1995).
}
